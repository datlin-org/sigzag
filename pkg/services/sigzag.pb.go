// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.1
// source: sigzag.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PipeType Pipeline options
type PipeType int32

const (
	PipeType_PIPE_UNSPECIFIED PipeType = 0
	PipeType_INGRESS          PipeType = 1
	PipeType_EGRESS           PipeType = 2
	PipeType_EXTRACT          PipeType = 3
	PipeType_TRANSFORM        PipeType = 4
	PipeType_LOAD             PipeType = 5
)

// Enum value maps for PipeType.
var (
	PipeType_name = map[int32]string{
		0: "PIPE_UNSPECIFIED",
		1: "INGRESS",
		2: "EGRESS",
		3: "EXTRACT",
		4: "TRANSFORM",
		5: "LOAD",
	}
	PipeType_value = map[string]int32{
		"PIPE_UNSPECIFIED": 0,
		"INGRESS":          1,
		"EGRESS":           2,
		"EXTRACT":          3,
		"TRANSFORM":        4,
		"LOAD":             5,
	}
)

func (x PipeType) Enum() *PipeType {
	p := new(PipeType)
	*p = x
	return p
}

func (x PipeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipeType) Descriptor() protoreflect.EnumDescriptor {
	return file_sigzag_proto_enumTypes[0].Descriptor()
}

func (PipeType) Type() protoreflect.EnumType {
	return &file_sigzag_proto_enumTypes[0]
}

func (x PipeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipeType.Descriptor instead.
func (PipeType) EnumDescriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{0}
}

type Workload int32

const (
	Workload_WORKLOAD_UNSPECIFIED Workload = 0
	Workload_AI                   Workload = 1
	Workload_ML                   Workload = 2
)

// Enum value maps for Workload.
var (
	Workload_name = map[int32]string{
		0: "WORKLOAD_UNSPECIFIED",
		1: "AI",
		2: "ML",
	}
	Workload_value = map[string]int32{
		"WORKLOAD_UNSPECIFIED": 0,
		"AI":                   1,
		"ML":                   2,
	}
)

func (x Workload) Enum() *Workload {
	p := new(Workload)
	*p = x
	return p
}

func (x Workload) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Workload) Descriptor() protoreflect.EnumDescriptor {
	return file_sigzag_proto_enumTypes[1].Descriptor()
}

func (Workload) Type() protoreflect.EnumType {
	return &file_sigzag_proto_enumTypes[1]
}

func (x Workload) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Workload.Descriptor instead.
func (Workload) EnumDescriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{1}
}

type DataSourceType int32

const (
	DataSourceType_LocalFile   DataSourceType = 0
	DataSourceType_NetworkFile DataSourceType = 1
	DataSourceType_Database    DataSourceType = 2
	DataSourceType_API         DataSourceType = 3
)

// Enum value maps for DataSourceType.
var (
	DataSourceType_name = map[int32]string{
		0: "LocalFile",
		1: "NetworkFile",
		2: "Database",
		3: "API",
	}
	DataSourceType_value = map[string]int32{
		"LocalFile":   0,
		"NetworkFile": 1,
		"Database":    2,
		"API":         3,
	}
)

func (x DataSourceType) Enum() *DataSourceType {
	p := new(DataSourceType)
	*p = x
	return p
}

func (x DataSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_sigzag_proto_enumTypes[2].Descriptor()
}

func (DataSourceType) Type() protoreflect.EnumType {
	return &file_sigzag_proto_enumTypes[2]
}

func (x DataSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataSourceType.Descriptor instead.
func (DataSourceType) EnumDescriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{2}
}

// Config identifies the pipeline being logged
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineID   string        `protobuf:"bytes,1,opt,name=PipelineID,proto3" json:"PipelineID,omitempty"`
	PipelineName string        `protobuf:"bytes,2,opt,name=PipelineName,proto3" json:"PipelineName,omitempty"`
	PipelineType *PipelineType `protobuf:"bytes,3,opt,name=PipelineType,proto3" json:"PipelineType,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sigzag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_sigzag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetPipelineID() string {
	if x != nil {
		return x.PipelineID
	}
	return ""
}

func (x *Config) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *Config) GetPipelineType() *PipelineType {
	if x != nil {
		return x.PipelineType
	}
	return nil
}

// ServiceInfo details the service that has been created for the pipeline
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceID    string        `protobuf:"bytes,1,opt,name=ServiceID,proto3" json:"ServiceID,omitempty"`
	PipelineType *PipelineType `protobuf:"bytes,2,opt,name=PipelineType,proto3" json:"PipelineType,omitempty"`
	PipelineName string        `protobuf:"bytes,3,opt,name=PipelineName,proto3" json:"PipelineName,omitempty"`
	PipelineId   string        `protobuf:"bytes,4,opt,name=PipelineId,proto3" json:"PipelineId,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sigzag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_sigzag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{1}
}

func (x *Service) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

func (x *Service) GetPipelineType() *PipelineType {
	if x != nil {
		return x.PipelineType
	}
	return nil
}

func (x *Service) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *Service) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

// PipelineType sets the type of pipeline and services available
type PipelineType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipeType PipeType `protobuf:"varint,1,opt,name=PipeType,proto3,enum=PipeType" json:"PipeType,omitempty"`
	Workload Workload `protobuf:"varint,2,opt,name=Workload,proto3,enum=Workload" json:"Workload,omitempty"`
	Active   bool     `protobuf:"varint,3,opt,name=Active,proto3" json:"Active,omitempty"`
}

func (x *PipelineType) Reset() {
	*x = PipelineType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sigzag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineType) ProtoMessage() {}

func (x *PipelineType) ProtoReflect() protoreflect.Message {
	mi := &file_sigzag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineType.ProtoReflect.Descriptor instead.
func (*PipelineType) Descriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineType) GetPipeType() PipeType {
	if x != nil {
		return x.PipeType
	}
	return PipeType_PIPE_UNSPECIFIED
}

func (x *PipelineType) GetWorkload() Workload {
	if x != nil {
		return x.Workload
	}
	return Workload_WORKLOAD_UNSPECIFIED
}

func (x *PipelineType) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

// Transaction is an entry to the TransactionLog
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID          string   `protobuf:"bytes,1,opt,name=TransactionID,proto3" json:"TransactionID,omitempty"`
	Service                *Service `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	FunctionName           string   `protobuf:"bytes,3,opt,name=FunctionName,proto3" json:"FunctionName,omitempty"`
	DataSourceHash         string   `protobuf:"bytes,4,opt,name=DataSourceHash,proto3" json:"DataSourceHash,omitempty"`
	DataSourceLocationHash string   `protobuf:"bytes,5,opt,name=DataSourceLocationHash,proto3" json:"DataSourceLocationHash,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sigzag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sigzag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *Transaction) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Transaction) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *Transaction) GetDataSourceHash() string {
	if x != nil {
		return x.DataSourceHash
	}
	return ""
}

func (x *Transaction) GetDataSourceLocationHash() string {
	if x != nil {
		return x.DataSourceLocationHash
	}
	return ""
}

// Log for the logging all transactions for a pipeline
type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID       string         `protobuf:"bytes,1,opt,name=LogID,proto3" json:"LogID,omitempty"`
	Transaction []*Transaction `protobuf:"bytes,2,rep,name=Transaction,proto3" json:"Transaction,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sigzag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_sigzag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_sigzag_proto_rawDescGZIP(), []int{4}
}

func (x *Log) GetLogID() string {
	if x != nil {
		return x.LogID
	}
	return ""
}

func (x *Log) GetTransaction() []*Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

var File_sigzag_proto protoreflect.FileDescriptor

var file_sigzag_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x69, 0x67, 0x7a, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f,
	0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x0c, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x22, 0x74, 0x0a, 0x0c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x50,
	0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x16,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x4b, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2a, 0x5f, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x49, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x58, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x41, 0x44,
	0x10, 0x05, 0x2a, 0x34, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18,
	0x0a, 0x14, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x49, 0x10, 0x01,
	0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4c, 0x10, 0x02, 0x2a, 0x47, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x10,
	0x03, 0x32, 0x55, 0x0a, 0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x07, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x08, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x04, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sigzag_proto_rawDescOnce sync.Once
	file_sigzag_proto_rawDescData = file_sigzag_proto_rawDesc
)

func file_sigzag_proto_rawDescGZIP() []byte {
	file_sigzag_proto_rawDescOnce.Do(func() {
		file_sigzag_proto_rawDescData = protoimpl.X.CompressGZIP(file_sigzag_proto_rawDescData)
	})
	return file_sigzag_proto_rawDescData
}

var file_sigzag_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sigzag_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sigzag_proto_goTypes = []interface{}{
	(PipeType)(0),        // 0: PipeType
	(Workload)(0),        // 1: Workload
	(DataSourceType)(0),  // 2: DataSourceType
	(*Config)(nil),       // 3: Config
	(*Service)(nil),      // 4: Service
	(*PipelineType)(nil), // 5: PipelineType
	(*Transaction)(nil),  // 6: Transaction
	(*Log)(nil),          // 7: Log
}
var file_sigzag_proto_depIdxs = []int32{
	5, // 0: Config.PipelineType:type_name -> PipelineType
	5, // 1: Service.PipelineType:type_name -> PipelineType
	0, // 2: PipelineType.PipeType:type_name -> PipeType
	1, // 3: PipelineType.Workload:type_name -> Workload
	4, // 4: Transaction.Service:type_name -> Service
	6, // 5: Log.Transaction:type_name -> Transaction
	3, // 6: Pipeline.CreatePipeline:input_type -> Config
	6, // 7: Pipeline.LogTransaction:input_type -> Transaction
	4, // 8: Pipeline.CreatePipeline:output_type -> Service
	7, // 9: Pipeline.LogTransaction:output_type -> Log
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sigzag_proto_init() }
func file_sigzag_proto_init() {
	if File_sigzag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sigzag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sigzag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sigzag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sigzag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sigzag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sigzag_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sigzag_proto_goTypes,
		DependencyIndexes: file_sigzag_proto_depIdxs,
		EnumInfos:         file_sigzag_proto_enumTypes,
		MessageInfos:      file_sigzag_proto_msgTypes,
	}.Build()
	File_sigzag_proto = out.File
	file_sigzag_proto_rawDesc = nil
	file_sigzag_proto_goTypes = nil
	file_sigzag_proto_depIdxs = nil
}
